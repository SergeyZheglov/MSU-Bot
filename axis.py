import discord
from discord.ext import commands
import asyncio
import os, datetime

#--------------------------------------------+
#                Connections                 |
#--------------------------------------------+
bot_token = str(os.environ.get("bot_token"))
prefix = "m!"
intents = discord.Intents.all()
client = commands.Bot(command_prefix=prefix, intents=intents)
client.remove_command("help")


#--------------------------------------------+
#                 Variables                  |
#--------------------------------------------+
started_at = datetime.datetime.utcnow()


#--------------------------------------------+
#                 Functions                  |
#--------------------------------------------+
from functions import visual_delta, has_instance, display_perms, CooldownResetSignal


#--------------------------------------------+
#                   Events                   |
#--------------------------------------------+
@client.event
async def on_ready():
    print(f"Bot: {client.user}")


#--------------------------------------------+
#                  Commands                  |
#--------------------------------------------+
@client.command()
@commands.is_owner()
async def logout(ctx):
    await ctx.send("```>> Logging out...```")
    await client.logout()


@client.command()
async def stats(ctx):
    uptime = datetime.datetime.utcnow() - started_at
    total_members = 0
    total_servers = 0
    
    for guild in client.guilds:
        total_members += guild.member_count
        total_servers += 1
    
    reply = discord.Embed(
        title="üåç –°–æ—Å—Ç–æ—è–Ω–∏–µ –±–æ—Ç–∞",
        color=discord.Color.blue()
    )
    reply.add_field(name="üóÇ –°–µ—Ä–≤–µ—Ä–æ–≤", value=f"> {total_servers}", inline=False)
    reply.add_field(name="üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π", value=f"> {total_members}", inline=False)
    reply.add_field(name="üïë –ê–ø—Ç–∞–π–º", value=f"> {visual_delta(uptime)}")
    reply.add_field(name="üõ∞ –ü–∏–Ω–≥", value=f"> {client.latency * 1000:.0f}", inline=False)
    reply.set_thumbnail(url=str(client.user.avatar_url))
    await ctx.send(embed=reply)


@commands.cooldown(1, 1, commands.BucketType.member)
@client.command(aliases=["h"], help="—É–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–µ–µ –æ –∫–∞–∂–¥–æ–π –∫–æ–º–∞–Ω–¥–µ")
async def help(ctx, *, cmd_s=None):
    p = ctx.prefix
    
    if cmd_s is None:
        cog_desc = f"> `{p}cmds main`\n"
        for _cog in client.cogs:
            cog_desc += f"> `{p}cmds {_cog}`\n"
        reply = discord.Embed(
            title="üìñ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –∫–æ–º–∞–Ω–¥",
            description=(
                f"–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–∞–∂–¥—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é:\n{cog_desc}\n"
                f"–ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ –∫–æ–º–∞–Ω–¥–µ: `{p}help –Ω—É–∂–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞`"
            ),
            color=discord.Color.blurple()
        )
        reply.set_footer(text=str(ctx.author), icon_url=ctx.author.avatar_url)
        await ctx.send(embed=reply)

    else:
        cmd = None
        for c in client.commands:
            if cmd_s in [c.name, *c.aliases]:
                cmd = c
                break
        
        if cmd is None:
            reply = discord.Embed(
                title="üîé | –ù–µ –Ω–∞—à—ë–ª –∫–æ–º–∞–Ω–¥—É, —É–≤—ã",
                description=f"–£ –º–µ–Ω—è –Ω–µ—Ç –∫–æ–º–∞–Ω–¥—ã `{p}{cmd_s}`, –º–æ–∂–µ—Ç, –í—ã –æ—à–∏–±–ª–∏—Å—å?",
                color=discord.Color.blurple()
            )
            reply.set_footer(text=str(ctx.author), icon_url=ctx.author.avatar_url)
            await ctx.send(embed=reply)
        
        else:
            description = "`-`"; usage = "`-`"; brief = "`-`"; aliases = "-"
            if cmd.description != "":
                description = cmd.description
            if cmd.usage is not None:
                usage = "\n> ".join( [f"`{p}{cmd} {u}`" for u in cmd.usage.split("\n")] )
            if cmd.brief is not None:
                brief = "\n> ".join( [f"`{p}{cmd} {u}`" for u in cmd.brief.split("\n")] )
            if len(cmd.aliases) > 0:
                aliases = ", ".join(cmd.aliases)
            
            reply = discord.Embed(
                title = f"‚ùì –û–± –∞—Ä–≥—É–º–µ–Ω—Ç–∞—Ö `{p}{cmd}`",
                description = (
                    f"**–û–ø–∏—Å–∞–Ω–∏–µ:** {description}\n"
                    f"**–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:** {usage}\n"
                    f"**–ü—Ä–∏–º–µ—Ä—ã:** {brief}\n\n"
                    f"**–°–∏–Ω–æ–Ω–∏–º—ã:** `{aliases}`"
                )
            )
            reply.set_footer(text=str(ctx.author), icon_url=ctx.author.avatar_url)
            await ctx.send(embed=reply)

            try:
                ctx.command.reset_cooldown(ctx)
            except Exception:
                pass


@commands.cooldown(1, 1, commands.BucketType.member)
@client.command(aliases=["commands"], help="—Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥ –∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏")
async def cmds(ctx, *, section=None):
    p = ctx.prefix
    if section is None:
        cog_desc = f"> `{p}cmds main`\n"
        for _cog in client.cogs:
            cog_desc += f"> `{p}cmds {_cog}`\n"
            
        reply = discord.Embed(
            title="üìñ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –∫–æ–º–∞–Ω–¥",
            description=(
                f"–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–∞–∂–¥—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é:\n{cog_desc}\n"
                f"–ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ –∫–æ–º–∞–Ω–¥–µ: `{p}help –Ω—É–∂–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞`"
            ),
            color=discord.Color.blurple()
        )
        reply.set_footer(text=str(ctx.author), icon_url=ctx.author.avatar_url)
        await ctx.send(embed=reply)
    
    else:
        cog_found = None
        sec = section.lower()
        if "main".startswith(sec):
            cog_found = "main"
            cog_commands = [c for c in client.commands if c.cog is None]
        else:
            for _cog in client.cogs:
                if str(_cog).lower().startswith(sec):
                    cog_found = _cog
                    cog_commands = client.get_cog(_cog).get_commands()
                    break
        
        if cog_found is None:
            reply = discord.Embed(
                title="üîé | –ù–µ –Ω–∞—à—ë–ª –∫–∞—Ç–µ–≥–æ—Ä–∏—é, —É–≤—ã",
                description=f"–£ –º–µ–Ω—è –Ω–µ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ `{section}`, –º–æ–∂–µ—Ç —Å—Ç–æ–∏—Ç –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞–ø–∏—Å–∞–Ω–∏–µ?",
                color=discord.Color.blurple()
            )
            reply.set_footer(text=str(ctx.author), icon_url=ctx.author.avatar_url)
            await ctx.send(embed=reply)
        
        else:
            desc = ""
            for cmd in cog_commands:
                if cmd.help is None:
                    cmdhelp = "[-]"
                else:
                    cmdhelp = cmd.help
                desc += f"`{p}{cmd}` - {cmdhelp}\n"
            reply = discord.Embed(
                title=f"üìÅ | –ö–∞—Ç–µ–≥–æ—Ä–∏—è –∫–æ–º–∞–Ω–¥ `{cog_found}`",
                description=f"–ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ –∫–æ–º–∞–Ω–¥–µ: `{p}help –Ω—É–∂–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞`\n\n{desc}",
                color=discord.Color.blurple()
            )
            reply.set_footer(text=str(ctx.author), icon_url=ctx.author.avatar_url)
            await ctx.send(embed=reply)


@client.command()
@commands.has_permissions(administrator=True)
async def say(ctx, *, text):
    reply = discord.Embed(
        description=text,
        color=ctx.guild.me.color
    )
    await ctx.send(embed=reply)
    await ctx.message.delete()

#----------------------------------------------+
#                   Errors                     |
#----------------------------------------------+
@client.event
async def on_command_error(ctx, error):
    if isinstance(error, commands.CommandOnCooldown):
        
        def TimeExpand(time):
            if time//60 > 0:
                return str(time//60)+'–º–∏–Ω '+str(time%60)+' —Å–µ–∫'
            elif time > 0:
                return str(time)+' —Å–µ–∫'
            else:
                return f"0.1 —Å–µ–∫"
        
        cool_notify = discord.Embed(
                title='‚è≥ –ü–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ',
                description = f"–û—Å—Ç–∞–ª–æ—Å—å {TimeExpand(int(error.retry_after))}"
            )
        await ctx.send(embed=cool_notify)
    
    elif isinstance(error, commands.MissingPermissions):
        if ctx.author.id != 0:
            reply = discord.Embed(
                title="‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤",
                description=f"–ù–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø—Ä–∞–≤–∞:\n{display_perms(error.missing_perms)}",
                color=discord.Color.dark_red()
            )
            reply.set_footer(text=str(ctx.author), icon_url=ctx.author.avatar_url)
            await ctx.send(embed=reply)
        else:
            try:
                await ctx.reinvoke()
            except Exception as e:
                await on_command_error(ctx, e)
    
    elif isinstance(error, commands.MissingRequiredArgument):
        p = ctx.prefix
        cmd = ctx.command
        reply = discord.Embed(
            title=f"üóÉ `{cmd.name}`: –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤",
            description=(
                "–ö–∞–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ?\n"
                f"**–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:** `{p}{cmd.name} {cmd.brief}`\n"
                f"**–ü—Ä–∏–º–µ—Ä:** `{p}{cmd.name} {cmd.usage}`\n\n"
                f"**–ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ–± —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ:** `{p}help {cmd}`"
            ),
            color=discord.Color.dark_red()
        )
        reply.set_footer(text=str(ctx.author), icon_url=ctx.author.avatar_url)
        await ctx.send(embed=reply)

        ctx.command.reset_cooldown(ctx)

    elif isinstance(error, commands.BadArgument):
        start, middle, rest = str(error).split(maxsplit=2)
        if '"' in middle:
            arg = middle
            _type = start.lower()
            ru_msgs = {
                "role": f"–†–æ–ª—å {arg} –Ω–µ –±—ã–ª–∞ –Ω–∞–π–¥–µ–Ω–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.",
                "member": f"–£—á–∞—Å—Ç–Ω–∏–∫ {arg} –Ω–µ –±—ã–ª –Ω–∞–π–¥–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.",
                "user": f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {arg} –Ω–µ –±—ã–ª –Ω–∞–π–¥–µ–Ω, –≤–æ–∑–º–æ–∂–Ω–æ, —É –º–µ–Ω—è —Å –Ω–∏–º –Ω–µ—Ç –æ–±—â–∏—Ö —Å–µ—Ä–≤–µ—Ä–æ–≤."
            }
            desc = ru_msgs.get(_type, "–ö–∞–∂–µ—Ç—Å—è, –≤–≤–µ–¥—ë–Ω–Ω—ã–µ –∞—Ä–≥—É–º–µ–Ω—Ç—ã –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç —Ç—Ä–µ–±—É–µ–º–æ–º—É —Ñ–æ—Ä–º–∞—Ç—É.")
        else:
            if rest.split(maxsplit=1)[0] == '"int"':
                desc = "–£–∫–∞–∂–∏—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ, –Ω–∞–ø—Ä–∏–º–µ—Ä `5`."
            else:
                desc = "–ö–∞–∂–µ—Ç—Å—è, –≤–≤–µ–¥—ë–Ω–Ω—ã–µ –∞—Ä–≥—É–º–µ–Ω—Ç—ã –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç —Ç—Ä–µ–±—É–µ–º–æ–º—É —Ñ–æ—Ä–º–∞—Ç—É."
        reply = discord.Embed(
            title=f"üìç | –ß—Ç–æ-—Ç–æ –≤–≤–µ–¥–µ–Ω–æ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ",
            description=desc,
            color=discord.Color.dark_red()
        )
        reply.set_footer(text=str(ctx.author), icon_url=ctx.author.avatar_url)
        await ctx.send(embed=reply)

        ctx.command.reset_cooldown(ctx)

    elif isinstance(error, commands.CommandNotFound):
        pass

    elif isinstance(error, CooldownResetSignal):
        ctx.command.reset_cooldown(ctx)

    else:
        print(error)

#----------------------------------------------+
#                  Loading Cogs                |
#----------------------------------------------+
for file_name in os.listdir("./cogs"):
    if file_name.endswith(".py"):
        client.load_extension(f"cogs.{file_name[:-3]}")


client.run(bot_token)
