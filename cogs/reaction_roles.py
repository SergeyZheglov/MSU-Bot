import discord
from discord.ext import commands
from discord.ext.commands import Bot
import asyncio

#----------------------------------------------+
#                 Functions                    |
#----------------------------------------------+
from functions import CooldownResetSignal, ReactionRolesConfig


class reaction_roles(commands.Cog):
    def __init__(self, client):
        self.client = client

    #----------------------------------------------+
    #                   Events                     |
    #----------------------------------------------+
    @commands.Cog.listener()
    async def on_ready(self):
        print(f">> reaction_roles cog is loaded")
    

    @commands.Cog.listener()
    async def on_raw_reaction_add(self, payload):
        server_rr = ReactionRolesConfig(payload.guild_id)
        emojis = server_rr.get_roles(payload.message_id)
        # If emoji is registered
        if str(payload.emoji) in emojis:
            guild = self.client.get_guild(payload.guild_id)
            role = guild.get_role(emojis[str(payload.emoji)])
            # If the role still exists
            if role is not None:
                member = guild.get_member(payload.user_id)
                if role not in member.roles:
                    try:
                        await member.add_roles(role)

                    except Exception:
                        pass

    
    @commands.Cog.listener()
    async def on_raw_reaction_remove(self, payload):
        server_rr = ReactionRolesConfig(payload.guild_id)
        emojis = server_rr.get_roles(payload.message_id)
        # If emoji is registered
        if str(payload.emoji) in emojis:
            guild = self.client.get_guild(payload.guild_id)
            role = guild.get_role(emojis[str(payload.emoji)])
            # If the role still exists
            if role is not None:
                member = guild.get_member(payload.user_id)
                if role in member.roles:
                    try:
                        await member.remove_roles(role)

                    except Exception:
                        pass


    @commands.Cog.listener()
    async def on_raw_message_delete(self, payload):
        rconf = ReactionRolesConfig(payload.guild_id)
        rconf.delete_branch(payload.message_id)

    #----------------------------------------------+
    #                  Commands                    |
    #----------------------------------------------+
    @commands.cooldown(1, 120, commands.BucketType.member)
    @commands.has_permissions(administrator=True)
    @commands.command(
        aliases=["reaction-role", "rr", "reactionrole", "add-reaction-role"],
        help="—Å–æ–∑–¥–∞—Ç—å —Ä–æ–ª—å –∑–∞ —Ä–µ–∞–∫—Ü–∏—é",
        description="–¥–æ–±–∞–≤–ª—è–µ—Ç —Ä–æ–ª—å –∑–∞ —Ä–µ–∞–∫—Ü–∏—é –ø–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏–µ–º.",
        usage="–†–æ–ª—å",
        brief="Member" )
    async def reaction_role(self, ctx, *, role: discord.Role):
        if role.position >= ctx.author.top_role.position  and ctx.author.id != ctx.guild.owner_id:
            reply = discord.Embed(
                title="‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤",
                description=f"–£–∫–∞–∑–∞–Ω–Ω–∞—è —Ä–æ–ª—å **<@&{role.id}>** –≤—ã—à–µ –í–∞—à–µ–π, –ø–æ—ç—Ç–æ–º—É –í—ã –Ω–µ –∏–º–µ–µ—Ç–µ –ø—Ä–∞–≤–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—Ç—å –µ—ë –∑–∞ –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ —Ä–µ–∞–∫—Ü–∏—é.",
                color=discord.Color.dark_red()
            )
            reply.set_footer(text=str(ctx.author), icon_url=str(ctx.author.avatar_url))
            await ctx.send(embed=reply)

        else:
            server_rr = ReactionRolesConfig(ctx.guild.id)

            reply = discord.Embed(
                title="üß∏ | –†–æ–ª—å –∑–∞ —Ä–µ–∞–∫—Ü–∏—é",
                description=(
                    f"–í—ã —É–∫–∞–∑–∞–ª–∏ **<@&{role.id}>** –≤ –∫–∞—á–µ—Å—Ç–≤–µ —Ä–æ–ª–∏ –∑–∞ —Ä–µ–∞–∫—Ü–∏—é.\n"
                    "–¢–µ–ø–µ—Ä—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥ –Ω—É–∂–Ω—ã–º –í–∞–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º –¥–æ–±–∞–≤—å—Ç–µ —Ä–µ–∞–∫—Ü–∏—é, –∑–∞ –∫–æ—Ç–æ—Ä—É—é –±—É–¥–µ—Ç –¥–∞–≤–∞—Ç—å—Å—è —Ä–æ–ª—å."
                ),
                color=role.color
            )
            reply.set_footer(text=str(ctx.author), icon_url=ctx.author.avatar_url)
            await ctx.send(embed=reply)

            # Waiting for moderator's reaction
            def check(payload):
                return payload.user_id == ctx.author.id and payload.guild_id == ctx.guild.id
            
            cycle = True
            _payload = None
            while cycle:
                try:
                    payload = await self.client.wait_for("raw_reaction_add", check=check, timeout=120)

                except asyncio.TimeoutError:
                    reply = discord.Embed(
                        title="üïë | –ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è",
                        description="–í—ã –Ω–µ —Å—Ç–∞–≤–∏–ª–∏ —Ä–µ–∞–∫—Ü–∏—é –±–æ–ª–µ–µ 120 —Å–µ–∫—É–Ω–¥",
                        color=discord.Color.blurple()
                    )
                    reply.set_footer(text=str(ctx.author), icon_url=ctx.author.avatar_url)
                    await ctx.send(ctx.author.mention, embed=reply)
                    cycle = False

                else:
                    if server_rr.get_role(payload.message_id, payload.emoji) is not None:
                        reply = discord.Embed(
                            title="‚ö† –û—à–∏–±–∫–∞",
                            description="–ó–∞ —ç—Ç—É —Ä–µ–∞–∫—Ü–∏—é —É–∂–µ –¥–∞—ë—Ç—Å—è —Ä–æ–ª—å",
                            color=discord.Color.gold()
                        )
                        reply.set_footer(text=str(ctx.author), icon_url=str(ctx.author.avatar_url))
                        await ctx.send(ctx.author.mention, embed=reply)

                    else:
                        channel = ctx.guild.get_channel(payload.channel_id)
                        message = await channel.fetch_message(payload.message_id)
                        try:
                            await message.add_reaction(payload.emoji)
                            await message.remove_reaction(payload.emoji, ctx.author)
                        except Exception:
                            pass
                        else:
                            cycle = False
                            _payload = payload
            
            # Adding emoji-role pair to database
            if _payload is not None:
                server_rr.add_role(_payload.message_id, _payload.emoji, role.id)

                reply = discord.Embed(
                    title="üß∏ | –†–æ–ª—å –∑–∞ —Ä–µ–∞–∫—Ü–∏—é",
                    description=f"–¢–µ–ø–µ—Ä—å –≤ –∫–∞–Ω–∞–ª–µ <#{_payload.channel_id}> –¥–∞—ë—Ç—Å—è —Ä–æ–ª—å **<@&{role.id}>** –∑–∞ —Ä–µ–∞–∫—Ü–∏—é [{_payload.emoji}] –ø–æ–¥ –Ω—É–∂–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º.",
                    color=role.color
                )
                reply.set_footer(text=str(ctx.author), icon_url=ctx.author.avatar_url)
                await ctx.send(embed=reply)
        
        # Resetting cooldownd
        raise CooldownResetSignal()


    @commands.cooldown(1, 120, commands.BucketType.member)
    @commands.has_permissions(administrator=True)
    @commands.command(
        aliases=["remove-reaction-role", "rrr", "removereactionrole", "reaction-role-remove"],
        help="—É–¥–∞–ª–∏—Ç—å —Ä–æ–ª—å –∑–∞ —Ä–µ–∞–∫—Ü–∏—é",
        description="—É–¥–∞–ª—è–µ—Ç —Ä–æ–ª—å –∑–∞ —Ä–µ–∞–∫—Ü–∏—é –ø–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏–µ–º.",
        usage="",
        brief="" )
    async def remove_reaction_role(self, ctx):
        server_rr = ReactionRolesConfig(ctx.guild.id)

        reply = discord.Embed(
            title="‚Ü© | –°–±—Ä–æ—Å —Ä–æ–ª–∏ –∑–∞ —Ä–µ–∞–∫—Ü–∏—é",
            description="–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥ –Ω—É–∂–Ω—ã–º –í–∞–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º —É–±–µ—Ä–∏—Ç–µ (–∏–ª–∏ –ø–æ—Å—Ç–∞–≤—å—Ç–µ –∏ —É–±–µ—Ä–∏—Ç–µ) —Ä–µ–∞–∫—Ü–∏—é, –∑–∞ –∫–æ—Ç–æ—Ä—É—é –¥–∞—ë—Ç—Å—è —Ä–æ–ª—å.",
            color=discord.Color.magenta()
        )
        reply.set_footer(text=str(ctx.author), icon_url=ctx.author.avatar_url)
        await ctx.send(embed=reply)

        # Waiting for moderator's reaction
        def check(payload):
            return payload.user_id == ctx.author.id and payload.guild_id == ctx.guild.id
        
        cycle = True
        _payload = None
        role_id = None
        while cycle:
            try:
                payload = await self.client.wait_for("raw_reaction_remove", check=check, timeout=120)

            except asyncio.TimeoutError:
                reply = discord.Embed(
                    title="üïë | –ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è",
                    description="–í—ã –Ω–µ —É–±–∏—Ä–∞–ª–∏ —Ä–µ–∞–∫—Ü–∏–∏ –±–æ–ª–µ–µ 120 —Å–µ–∫—É–Ω–¥",
                    color=discord.Color.blurple()
                )
                reply.set_footer(text=str(ctx.author), icon_url=ctx.author.avatar_url)
                await ctx.send(ctx.author.mention, embed=reply)
                cycle = False

            else:
                role_id = server_rr.get_role(payload.message_id, payload.emoji)
                if role_id is None:
                    reply = discord.Embed(
                        title="‚ö† –û—à–∏–±–∫–∞",
                        description="–ó–∞ —ç—Ç—É —Ä–µ–∞–∫—Ü–∏—é –Ω–µ –¥–∞—ë—Ç—Å—è —Ä–æ–ª—å",
                        color=discord.Color.gold()
                    )
                    reply.set_footer(text=str(ctx.author), icon_url=str(ctx.author.avatar_url))
                    await ctx.send(ctx.author.mention, embed=reply)

                else:
                    channel = ctx.guild.get_channel(payload.channel_id)
                    message = await channel.fetch_message(payload.message_id)
                    try:
                        await message.clear_reaction(payload.emoji)
                    except Exception:
                        pass
                    else:
                        cycle = False
                        _payload = payload
        
        # Adding emoji-role pair to database
        if _payload is not None:
            server_rr.remove_reaction(_payload.message_id, _payload.emoji)

            reply = discord.Embed(
                title="üéÄ | –°–±—Ä–æ—Å —Ä–æ–ª–∏ –∑–∞ —Ä–µ–∞–∫—Ü–∏—é",
                description=f"–¢–µ–ø–µ—Ä—å, –ø–æ–¥ —É–∫–∞–∑–∞–Ω–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º, —Ä–æ–ª—å **<@&{role_id}>** –±–æ–ª—å—à–µ –Ω–µ –¥–∞—ë—Ç—Å—è –∑–∞ —Ä–µ–∞–∫—Ü–∏—é [{_payload.emoji}].",
                color=discord.Color.magenta()
            )
            reply.set_footer(text=str(ctx.author), icon_url=ctx.author.avatar_url)
            await ctx.send(embed=reply)
        
        # Resetting cooldownd
        raise CooldownResetSignal()

    #----------------------------------------------+
    #                   Errors                     |
    #----------------------------------------------+


def setup(client):
    client.add_cog(reaction_roles(client))